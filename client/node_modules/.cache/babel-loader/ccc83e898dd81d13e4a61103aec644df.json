{"ast":null,"code":"import _classCallCheck from \"/Users/kelli/HOMEWORK/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kelli/HOMEWORK/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kelli/HOMEWORK/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kelli/HOMEWORK/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kelli/HOMEWORK/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kelli/HOMEWORK/Google-Books/client/src/pages/Saved.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container } from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResults\";\n\nvar SaveBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SaveBook, _Component);\n\n  function SaveBook() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SaveBook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SaveBook)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      savedBooks: []\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          description: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDeleteButton = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.componentDidMount();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SaveBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"componentDidMount\",\n    //when this component mounts, grab all books that were save to the database \n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBooks().then(function (res) {\n        return _this2.setState({\n          savedBooks: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } //function to remove book by id\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(SavedResult, {\n        savedBooks: this.state.savedBooks,\n        handleDeleteButton: this.handleDeleteButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SaveBook;\n}(Component);\n\nexport default SaveBook;","map":{"version":3,"sources":["/Users/kelli/HOMEWORK/Google-Books/client/src/pages/Saved.js"],"names":["React","Component","API","Jumbotron","Container","SavedResult","SaveBook","state","savedBooks","loadBooks","getBooks","then","res","setState","books","data","title","author","description","catch","err","console","log","handleDeleteButton","id","deleteBook","componentDidMount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE;AADR,K;;UAORC,S,GAAY,YAAM;AAChBP,MAAAA,GAAG,CAACQ,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEF,GAAG,CAACG,IAAb;AAAmBC,UAAAA,KAAK,EAAE,EAA1B;AAA8BC,UAAAA,MAAM,EAAE,EAAtC;AAA0CC,UAAAA,WAAW,EAAE;AAAvD,SAAd,CADO;AAAA,OADX,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJZ;AAKD,K;;UAUDG,kB,GAAqB,UAAAC,EAAE,EAAI;AACvBtB,MAAAA,GAAG,CAACuB,UAAJ,CAAeD,EAAf,EACKb,IADL,CACU,UAAAC,GAAG;AAAA,eAAI,MAAKc,iBAAL,EAAJ;AAAA,OADb,EAEKP,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFd;AAGH,K;;;;;;;wCAxBmB;AAClB,WAAKX,SAAL;AACD;;;AAUD;wCACoB;AAAA;;AAChBP,MAAAA,GAAG,CAACQ,QAAJ,GACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAEI,GAAG,CAACG;AAAlB,SAAd,CAAJ;AAAA,OADb,EAEKI,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFd;AAGH,K,CAED;;;;6BAOS;AACL,aACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKb,KAAL,CAAWC,UAApC;AAAgD,QAAA,kBAAkB,EAAE,KAAKe,kBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ;AAQH;;;;EAvCkBtB,S;;AA4CvB,eAAeK,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container} from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResults\"\n\nclass SaveBook extends Component {\n    state = {\n        savedBooks: []\n    };\n    componentDidMount() {\n      this.loadBooks();\n    }\n  \n    loadBooks = () => {\n      API.getBooks()\n        .then(res =>\n          this.setState({ books: res.data, title: \"\", author: \"\", description: \"\" })\n        )\n        .catch(err => console.log(err));\n    };\n  \n    //when this component mounts, grab all books that were save to the database \n    componentDidMount() {\n        API.getBooks()\n            .then(res => this.setState({ savedBooks: res.data }))\n            .catch(err => console.log(err))\n    }\n\n    //function to remove book by id\n    handleDeleteButton = id => {\n        API.deleteBook(id)\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"container\">\n                <Jumbotron />\n                <Container>\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\n                </Container>\n            </Container>\n        )\n    }\n}\n\n\n\nexport default SaveBook "]},"metadata":{},"sourceType":"module"}